<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>yara</id>
    <version>4.5.5</version>
    <packageSourceUrl>https://github.com/chtof/chocolatey-packages/tree/master/automatic/yara</packageSourceUrl>
    <owners>chtof</owners>
    <title>Yara</title>
    <authors>Yara Team.</authors>
    <projectUrl>https://virustotal.github.io/yara</projectUrl>
    <!--<iconUrl>https://cdn.jsdelivr.net/gh/chtof/chocolatey-packages/automatic/yara/yara.png</iconUrl>-->
    <!-- <copyright>Year Software Vendor</copyright> -->
    <licenseUrl>https://raw.githubusercontent.com/VirusTotal/yara/master/COPYING</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/virustotal/yara</projectSourceUrl>
    <docsUrl>https://yara.readthedocs.org</docsUrl>
    <mailingListUrl>https://groups.google.com/forum/#!forum/yara-project</mailingListUrl>
    <bugTrackerUrl>https://github.com/VirusTotal/yara/issues</bugTrackerUrl>
    <tags>yara pattern matching malware research</tags>
    <summary>The pattern matching swiss knife for malware researchers (and everyone else).</summary>
    <description><![CDATA[## YARA in a nutshell
YARA is a tool aimed at (but not limited to) helping malware researchers to identify and classify malware samples. With YARA you can create descriptions of malware families (or whatever you want to describe) based on textual or binary patterns. Each description, a.k.a rule, consists of a set of strings and a boolean expression which determine its logic. Let's see an example:

``rule silent_banker : banker
{
    meta:
        description = "This is just an example"
        thread_level = 3
        in_the_wild = true
    strings:
        $a = {6A 40 68 00 30 00 00 6A 14 8D 91}
        $b = {8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9}
        $c = "UVODFRYSIHLNWPEJXQZAKCBGMT"
    condition:
        $a or $b or $c
}``

The above rule is telling YARA that any file containing one of the three strings must be reported as silent_banker. This is just a simple example, more complex and powerful rules can be created by using wild-cards, case-insensitive strings, regular expressions, special operators and many other features that you'll find explained in [YARA's documentation](http://yara.readthedocs.org).

YARA is multi-platform, running on Windows, Linux and Mac OS X, and can be used through its command-line interface or from your own Python scripts with the yara-python extension.

If you plan to use YARA to scan compressed files (.zip, .tar, etc) you should take a look at [yextend](https://github.com/BayshoreNetworks/yextend), a very helpful extension to YARA developed and open-sourced by Bayshore Networks.

## Additional resources
If you plan to use YARA to scan compressed files (.zip, .tar, etc) you should take a look at [yextend](https://github.com/BayshoreNetworks/yextend), a very helpful extension to YARA developed and open-sourced by Bayshore Networks.

Additionally, they guys from [InQuest](https://inquest.net) have curated an aweseome list of [YARA-related stuff](https://github.com/InQuest/awesome-yara).
]]></description>
    <releaseNotes>https://github.com/VirusTotal/yara/releases</releaseNotes>
  </metadata>
  <files>
    <file src="legal\**" target="legal" />
    <file src="tools\**" target="tools" />
  </files>
</package>
